name: Go

on:
  push:
    branches:
      - main
    tags:
      - 'v*.*.*'
  pull_request:
    branches:
      - main

permissions:
  id-token: write        # needed to mint the OIDC token
  contents: write        # for checkout and uploading release assets
  attestations: write    # for writing provenance attestations

jobs:
  build:
    name: Build & Release (Go ${{ matrix.go-version }})
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: ["1.24.2"]

    steps:
      - name: "Check out code"
        uses: actions/checkout@v4

      - name: "Set up Go ${{ matrix.go-version }}"
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}
          cache: true

      - name: "Download dependencies"
        run: go mod download

      - name: "Get Sigstore OIDC token"
        id: get_oidc
        run: |
          TOKEN=$(curl -sSL \
            -H "Authorization: Bearer $ACTIONS_ID_TOKEN_REQUEST_TOKEN" \
            "$ACTIONS_ID_TOKEN_REQUEST_URL?audience=sigstore")
          echo "token=$TOKEN" >> $GITHUB_OUTPUT
        # uses GitHub’s built-in OIDC endpoint to mint a token with audience “sigstore”  [oai_citation:0‡Medium](https://medium.com/%40bdalpe/using-github-actions-tokens-for-authentication-to-kubernetes-clusters-6032170935b9?utm_source=chatgpt.com)

      - name: "Witness Run: build"
        id: witness
        uses: testifysec/witness-run-action@v0.2.2
        with:
          step: build
          enable-sigstore: true
          enable-archivista: true
          archivista-server: https://archivista.testifysec.io
          fulcio-oidc-client-id: sigstore
          fulcio-oidc-issuer: https://token.actions.githubusercontent.com
          fulcio-token: ${{ steps.get_oidc.outputs.token }}
          timestamp-servers: https://freetsa.org/tsr
          outfile: serve.intoto.json
          command: "go build -v -o serve ."
        # configuring Witness to use GitHub’s OIDC issuer and the raw token  [oai_citation:1‡GitHub](https://github.com/testifysec/witness-run-action)

      - name: "Create GitHub Release"
        if: startsWith(github.ref, 'refs/tags/')
        uses: actions/create-release@v1
        id: create_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          body: |
            - Built with Go ${{ matrix.go-version }}
            - Provenance attested via Witness

      - name: "Upload binary to release"
        if: startsWith(github.ref, 'refs/tags/')
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./serve
          asset_name: serve
          asset_content_type: application/octet-stream

      - name: "Upload attestation to release"
        if: startsWith(github.ref, 'refs/tags/')
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./serve.intoto.json
          asset_name: serve.intoto.json
          asset_content_type: application/json
