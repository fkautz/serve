name: Go

on:
  push:
    branches: [ main ]
    tags: [ 'v*.*.*' ]
  pull_request:
    branches: [ main ]

permissions:
  id-token: write        # enable OIDC token minting
  contents: write        # checkout & upload assets
  attestations: write    # for writing attestations

env:
  ARCHIVISTA_SERVER: https://archivista.testifysec.io
  FULCIO_SERVER:     https://fulcio.sigstore.dev

jobs:
  build:
    name: Build & Release (Go ${{ matrix.go-version }})
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: ["1.24.2"]

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Go ${{ matrix.go-version }}
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}
          cache: true

      - name: Download dependencies
        run: go mod download

      - name: Request Sigstore OIDC token
        # fetches a JWT from GH Actions for audience "sigstore"
        run: |
          echo "Requesting OIDC token for Sigstore…" >&2
          TOKEN=$(curl -sSL \
            -H "Authorization: Bearer $ACTIONS_ID_TOKEN_REQUEST_TOKEN" \
            "${ACTIONS_ID_TOKEN_REQUEST_URL}?audience=sigstore")
          echo "SIGSTORE_OIDC_TOKEN=$TOKEN" >> $GITHUB_ENV
        shell: bash

      - name: Witness Run: build
        id: witness
        uses: testifysec/witness-run-action@v0.2.2
        with:
          step: build
          enable-sigstore:   true
          enable-archivista: true
          archivista-server: ${{ env.ARCHIVISTA_SERVER }}
          fulcio:            ${{ env.FULCIO_SERVER }}
          fulcio-oidc-client-id: sigstore
          fulcio-oidc-issuer:    https://token.actions.githubusercontent.com
          fulcio-token:          ${{ env.SIGSTORE_OIDC_TOKEN }}
          timestamp-servers:     https://freetsa.org/tsr
          outfile:               serve.intoto.json
          command:               "go build -v -o serve ."
        # Witness will now sign via Fulcio using your GitHub OIDC token  [oai_citation:0‡GitHub](https://github.com/testifysec/witness-run-action/blob/main/action.yml) [oai_citation:1‡Secure Your Containers with Chainguard](https://www.chainguard.dev/unchained/keyless-git-commit-signing-with-gitsign-and-github-actions?utm_source=chatgpt.com)

      - name: Create GitHub Release
        if: startsWith(github.ref, 'refs/tags/')
        uses: actions/create-release@v1
        id: create_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name:    ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          body: |
            - Built with Go ${{ matrix.go-version }}
            - Provenance attested via Witness

      - name: Upload binary to release
        if: startsWith(github.ref, 'refs/tags/')
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url:        ${{ steps.create_release.outputs.upload_url }}
          asset_path:        ./serve
          asset_name:        serve
          asset_content_type: application/octet-stream

      - name: Upload attestation to release
        if: startsWith(github.ref, 'refs/tags/')
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url:        ${{ steps.create_release.outputs.upload_url }}
          asset_path:        ./serve.intoto.json
          asset_name:        serve.intoto.json
          asset_content_type: application/json
